import re, datetime, requestsfrom bs4 import BeautifulSoupURL = "https://www.chris.org/cgi-bin/jt65emeA"html = requests.get(URL, timeout=30).textsoup = BeautifulSoup(html, "html.parser")text = soup.get_text()  # full visible textlog_lines = [ln.rstrip() for ln in text.splitlines()]# line parser:  "10Sep 19:34 <message> ====== {<meta>}"line_rx = re.compile(r"""^\s*    (?P<daymon>\d{2}[A-Za-z]{3})\s+    (?P<time>\d{2}:\d{2})\s+    (?P<message>.*?)\s+    ======\s+\{(?P<meta>.*?)\}\s*$""", re.X)# meta helperscallsign_rx = re.compile(r"^[A-Z0-9/]+", re.I)grid_rx = re.compile(r"\b([A-R]{2}\d{2}(?:[A-X]{2})?)\b", re.I)  # e.g., JO33ii, RE68mventries = []for ln in log_lines:    m = line_rx.match(ln)    if not m:        continue    daymon, t, msg, meta = m.group("daymon", "time", "message", "meta")    # parse meta ? callsign, name, grid (best-effort)    cs = (callsign_rx.search(meta).group(0) if callsign_rx.search(meta) else None)    grid_match = grid_rx.search(meta)    grid = grid_match.group(1) if grid_match else None    # crude name extraction: remove callsign & trailing grid-like token    name = None    if cs:        tmp = meta[len(cs):].strip(" /")        if grid:            tmp = re.sub(rf"\b{re.escape(grid)}\b\s*$", "", tmp).strip()        # drop stray "xx" tags and obvious hardware notes        tmp = re.sub(r"\bxx\b", "", tmp).strip()        name = tmp.split()[0] if tmp else None    entries.append({        "timestamp_utc": daymon + " " + t,        "message": msg.strip(),        "meta_raw": meta.strip(),        "callsign": cs,        "grid": grid,        "name_guess": name    })for line in entries:    print(line)print(f"parsed {len(entries)} lines")